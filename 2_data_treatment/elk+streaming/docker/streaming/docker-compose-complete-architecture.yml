version: "3"

services: 
      
  # Apache NiFi: Data Ingestion Tool
  nifi:
    image: 'apache/nifi:latest'
    hostname: nifi
    container_name: nifi
    ports:
      - '8090:8090'
    environment:
      - NIFI_WEB_HTTP_PORT=8090
      
  # Jupyter: Notebook Analytics
  jupyter:
    image: 'jupyter/pyspark-notebook:spark-2'
    hostname: jupyterPySpark
    container_name: jupyterPySpark
    user: root
    environment:
      - JUPYTER_TOKEN=edem
    volumes:
      - ./config/spark-defaults.conf:/usr/local/spark-2.4.5-bin-hadoop2.7/conf/spark-defaults.conf
      - ./data:/tmp/data
    ports:
      - '8888:8888'
      
  zookeeper:
    image: confluentinc/cp-zookeeper:5.4.0
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  broker:
    image: confluentinc/cp-kafka:5.4.0
    hostname: broker
    container_name: broker
    depends_on:
      - zookeeper
    ports:
      - "29092:29092"
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0

  control-center:
    image: confluentinc/cp-enterprise-control-center:5.4.0
    hostname: control-center
    container_name: control-center
    depends_on:
      - zookeeper
      - broker
    ports:
      - "9021:9021"
    environment:
      CONTROL_CENTER_BOOTSTRAP_SERVERS: 'broker:29092'
      CONTROL_CENTER_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      CONTROL_CENTER_SCHEMA_REGISTRY_URL: "http://schema-registry:8081"
      CONTROL_CENTER_REPLICATION_FACTOR: 1
      CONTROL_CENTER_INTERNAL_TOPICS_PARTITIONS: 1
      CONTROL_CENTER_MONITORING_INTERCEPTOR_TOPIC_PARTITIONS: 1
      CONFLUENT_METRICS_TOPIC_REPLICATION: 1
      PORT: 9021


# Elasticsearch: Data Storage and Search Engine
  elasticsearch:
    image: 'elasticsearch:7.3.0'
    hostname: elasticsearch
    container_name: elasticsearch
    ports:
      - '9200:9200'
      - '9300:9300'
    environment:
      - discovery.type=single-node   

  # Kibana: Elasticsearch Dashboarding
  kibana:
    image: 'kibana:7.3.0'
    hostname: kibana
    container_name: kibana
    ports:
      - '5601:5601'
    environment:
      - elasticsearch.hosts=http://elasticsearch:9200
    depends_on:
      - elasticsearch
      
volumes:
  portainer_data:  