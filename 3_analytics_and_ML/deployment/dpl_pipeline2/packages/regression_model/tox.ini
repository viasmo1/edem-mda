
[tox]
# Tenemos una única librería "regression_model"
envlist = regression_model 
skipsdist = True

[testenv]
install_command = pip install {opts} {packages}
deps =
# Las dependencias
	-rrequirements.txt

setenv =
# Para que funcione localmente, recodad que debéis
# Especificar el PYTHONPATH en las variables
# de usuario (explicado en el HowTo01_Pildora03).
  	PYTHONPATH=.

commands =
# Entrenamos el modelo reproduciendo la fase de investigación
# 5 capas: datos, variables, entrenamiento, puntuación y test,
# definidas en pipeline.py, train_pipeline.py y predict.py y test.
	python regression_model/train_pipeline.py
		# Para que se ejecuten todas los pasos de nuestro pipeline.
	pytest tests/
		# Para que se ejecuten los tests


[testenv:install_locally]
# Este entorno no aparecía en la versión simplicada.

# Funciona de forma similar al testenv de arriba PERO
# los comandos son específicos para crear la librería.
	# sdist y bdist_wheel generan los archivos para 
	# la distribución de la librería.
	# Al ejecutar tox, aparecerá una carpeta "dist" con dos archivos
	# con los que podréis "distribuir" la librería.
	
# ES IMPORTANTE resaltar que este entorno no está incluido en la 
# línea 4 donde tenemos la lista de entornos a ejecutar.
# Por tanto, estos comandos no se ejecutarán por defecto. Por el contrario,
# habrá que indicarlo específicamente (ver video con la ejecución del ejemplo).

deps =
	{[testenv]deps}

setenv =
  	PYTHONPATH=.

commands =

	python regression_model/train_pipeline.py 
	python setup.py sdist bdist_wheel
